# Generated by Django 3.2.4 on 2022-01-10 06:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hilichurlian_database', '0004_historicalcompleteutterance_historicalword'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='historicalword',
            name='translation',
        ),
        migrations.RemoveField(
            model_name='word',
            name='translation',
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='context',
            field=models.TextField(blank=True, help_text='Should be official material when possible. Include as much as needed.'),
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='source',
            field=models.CharField(help_text='Must be the URL of an online resource documenting the utterance and its translation if provided.', max_length=200),
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='speaker',
            field=models.CharField(help_text='Provide a living being when possible. Non-living entities such as Quest UI are acceptable as a last resort.', max_length=75),
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='translation',
            field=models.CharField(blank=True, help_text='If there was a translation given in-game for this specific Hilichurlian sentence or phrase, enter the translation here. Unofficial translations are not allowed, regardless of how well-researched they are. Parentheses can be used for indirect translations, including inference from game mechanics such as successful item turn-in.', max_length=200),
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='translation_source',
            field=models.CharField(blank=True, help_text='Required if a translation is provided. Provide an in-game item when possible. Parentheses should be used if the source is a game mechanic, such as successful item turn-in.', max_length=75),
        ),
        migrations.AlterField(
            model_name='completeutterance',
            name='utterance',
            field=models.CharField(help_text='Please enter the full Hilichurlian sentence or phrase that was spoken or written. Individual words are acceptable if they were said as if they were a single sentence, such as in a one-word exclamation.', max_length=200),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='context',
            field=models.TextField(blank=True, help_text='Should be official material when possible. Include as much as needed.'),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='source',
            field=models.CharField(help_text='Must be the URL of an online resource documenting the utterance and its translation if provided.', max_length=200),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='speaker',
            field=models.CharField(help_text='Provide a living being when possible. Non-living entities such as Quest UI are acceptable as a last resort.', max_length=75),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='translation',
            field=models.CharField(blank=True, help_text='If there was a translation given in-game for this specific Hilichurlian sentence or phrase, enter the translation here. Unofficial translations are not allowed, regardless of how well-researched they are. Parentheses can be used for indirect translations, including inference from game mechanics such as successful item turn-in.', max_length=200),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='translation_source',
            field=models.CharField(blank=True, help_text='Required if a translation is provided. Provide an in-game item when possible. Parentheses should be used if the source is a game mechanic, such as successful item turn-in.', max_length=75),
        ),
        migrations.AlterField(
            model_name='historicalcompleteutterance',
            name='utterance',
            field=models.CharField(help_text='Please enter the full Hilichurlian sentence or phrase that was spoken or written. Individual words are acceptable if they were said as if they were a single sentence, such as in a one-word exclamation.', max_length=200),
        ),
        migrations.AlterField(
            model_name='historicalword',
            name='word',
            field=models.CharField(db_index=True, help_text='Must be a word that can be found in an utterance.', max_length=25),
        ),
        migrations.AlterField(
            model_name='word',
            name='word',
            field=models.CharField(help_text='Must be a word that can be found in an utterance.', max_length=25, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Please enter the name of the source, such as a quest name or item name. (This is not the name of a website or other host of a source.)', max_length=200)),
                ('url', models.CharField(help_text='Must be the URL of an online resource documenting the utterance and its translation if provided.', max_length=200)),
                ('version', models.CharField(choices=[('0', 'Pre-launch'), ('1.0', 'Version 1.0'), ('1.1', 'Version 1.1'), ('1.2', 'Version 1.2'), ('1.3', 'Version 1.3'), ('1.4', 'Version 1.4'), ('1.5', 'Version 1.5'), ('1.6', 'Version 1.6'), ('2.0', 'Version 2.0'), ('2.1', 'Version 2.1'), ('2.2', 'Version 2.2'), ('2.3', 'Version 2.3'), ('2.4', 'Version 2.4')], help_text='Please select the first live version of Genshin Impact in which this source appeared. Select "Pre-launch" only if this source is a pre-launch post from miHoYo or was never released after Genshin Impact launched.', max_length=3)),
                ('related_sources', models.ManyToManyField(blank=True, related_name='_hilichurlian_database_source_related_sources_+', to='hilichurlian_database.Source')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSource',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(help_text='Please enter the name of the source, such as a quest name or item name. (This is not the name of a website or other host of a source.)', max_length=200)),
                ('url', models.CharField(help_text='Must be the URL of an online resource documenting the utterance and its translation if provided.', max_length=200)),
                ('version', models.CharField(choices=[('0', 'Pre-launch'), ('1.0', 'Version 1.0'), ('1.1', 'Version 1.1'), ('1.2', 'Version 1.2'), ('1.3', 'Version 1.3'), ('1.4', 'Version 1.4'), ('1.5', 'Version 1.5'), ('1.6', 'Version 1.6'), ('2.0', 'Version 2.0'), ('2.1', 'Version 2.1'), ('2.2', 'Version 2.2'), ('2.3', 'Version 2.3'), ('2.4', 'Version 2.4')], help_text='Please select the first live version of Genshin Impact in which this source appeared. Select "Pre-launch" only if this source is a pre-launch post from miHoYo or was never released after Genshin Impact launched.', max_length=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical source',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
